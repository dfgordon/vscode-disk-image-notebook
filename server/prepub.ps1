# Run from project root, such as `.\server\prepub.ps1 darwin-arm64`
# This helps prepare for `vsce publish --target <platform>` by putting the appropriate
# server executable in `./server` and removing all others.
# It also makes some basic checks on the workspace.
param (
	[Parameter(Mandatory)]
	[ValidateSet("win32-x64","linux-x64","darwin-x64","darwin-arm64","universal")]
	[string]$platform
)

$changelog = Get-Content .\CHANGELOG.md
if ($changelog.ToLower() -match "unreleased") {
	Write-Error "unreleased appears in CHANGELOG"
	exit 1
}

$package1 = Get-Content .\package.json | ConvertFrom-Json
Write-Output ("package version is " + $package1.version)

$expected_re_patt = "## \[" + $package1.version + "\] - " + (Get-Date -Format yyyy-MM-dd)
if (! ($changelog -match $expected_re_patt)) {
	Write-Error ("expected pattern " + "not found in the CHANGELOG (" + $expected_re_patt + ")")
	exit 1
}

if ($platform -eq "universal") {
	Remove-Item server/**/a2kit*
	Get-ChildItem server -R
	return
}

if ($platform -eq "win32-x64") {
	$rust_triple = "x86_64-pc-windows-msvc"
	$executable = "a2kit.exe"
} elseif ($platform -eq "linux-x64") {
	$rust_triple = "x86_64-unknown-linux-musl"
	$executable = "a2kit"
} elseif ($platform -eq "darwin-x64") {
	$rust_triple = "x86_64-apple-darwin"
	$executable = "a2kit"
} elseif ($platform -eq "darwin-arm64") {
	$rust_triple = "aarch64-apple-darwin"
	$executable = "a2kit"
}

# Clean out all prior executables
Remove-Item server/**/a2kit*

# Extract the outer archive generated by CI to temp
$temp = $home + "/Downloads/temp/"
if (! (Test-Path -Path $temp)) {
	mkdir $temp
}
Remove-Item $temp/*
Expand-Archive -Path ($home + "/Downloads/result-" + $rust_triple + ".zip") -DestinationPath $temp

# Extract the inner archive to get the executable and move it to its final location
$inner_archive = $temp + (Get-ChildItem -Name ($temp + "a2kit-*"))
tar -xf $inner_archive
if (! (Test-Path -Path server/$platform)) {
    mkdir server/$platform
}
Move-Item -Path $executable -Destination server/$platform/

# Display the results
Get-ChildItem server -R
